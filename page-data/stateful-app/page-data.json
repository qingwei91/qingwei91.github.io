{"componentChunkName":"component---src-templates-blog-post-js","path":"/stateful-app/","result":{"data":{"site":{"siteMetadata":{"title":"All models are wrong","author":"Qing Wei"}},"markdownRemark":{"id":"2d8f1657-e662-542f-ad6f-f02393f53dd3","excerpt":"Stateful-ness Raft Algorithm Raft is a distributed consensus algorithm, it allows a number of processes to reach consensus on a value overâ€¦","html":"<h1>Stateful-ness</h1>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">def <span class=\"token function\">someApplication</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Int\n\n<span class=\"token function\">someApplication</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 20</span>\n\n<span class=\"token function\">someApplication</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 40</span></code></pre></div>\n<hr>\n<h2>Raft Algorithm</h2>\n<p>Raft is a distributed consensus algorithm, it allows a number of processes to reach consensus on a value over asynchronous network. </p>\n<hr>\n<h2>Some properties of Raft</h2>\n<ul>\n<li>Leader based, all writes go through Leader</li>\n<li>\n<p>Two inter-process RPC:</p>\n<ul>\n<li>Leader election</li>\n<li>\n<h2>Log Replication</h2>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Raft Cluster Client Api</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">RaftCluster<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// return null</span>\n\nRaftCluster<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nRaftCluster<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// return 20</span></code></pre></div>\n<hr>\n<h2>Cluster Setup</h2>\n<p><img src=\"/someimg\" alt=\"ThreeNodesDiagram\"></p>\n<hr>\n<h2>Leader Election</h2>\n<table>\n<thead>\n<tr>\n<th>Initial</th>\n<th>Desired</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"\" alt=\"img\"></td>\n<td><img src=\"\" alt=\"img\"></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>Leader election flow</h2>\n<ol>\n<li>Periodically run a checking process   </li>\n<li>\n<p>Start an election if needed:</p>\n<ul>\n<li>Update state to become candidate, and vote for self</li>\n<li>broadcast VotingRequest</li>\n</ul>\n</li>\n</ol>\n<hr>\n<p><strong>1a. Periodic check</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> cats<span class=\"token punctuation\">.</span>effect<span class=\"token punctuation\">.</span>Timer\n<span class=\"token keyword\">import</span> fs2<span class=\"token punctuation\">.</span>Stream\n\ntrait RaftAlgorithm<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\n  def raftProcess<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> Timer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>randomTime<span class=\"token punctuation\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>FiniteDuration<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Stream<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">,</span> Unit<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    Stream<span class=\"token punctuation\">.</span>repeatEval <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n        wait <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> randomTime\n        _    <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> Timer<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>wait<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span> \n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> \n  <span class=\"token punctuation\">}</span>\n    \n  def needElection<span class=\"token punctuation\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>Boolean<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<p><strong>1b. Check existing cluster state</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> cats<span class=\"token punctuation\">.</span>effect<span class=\"token punctuation\">.</span>Timer\n<span class=\"token keyword\">import</span> fs2<span class=\"token punctuation\">.</span>Stream\n\ntrait RaftAlgorithm<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n      \n  def state<span class=\"token punctuation\">:</span> Ref<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">,</span> NodeState<span class=\"token punctuation\">]</span>\n    \n  def needElection<span class=\"token punctuation\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>Boolean<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n      st <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> state<span class=\"token punctuation\">.</span>get\n      noLeader  <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span>leader<span class=\"token punctuation\">.</span>isEmpty\n      responses  <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>noLeader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              state<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>tpe <span class=\"token operator\">=</span> <span class=\"token string\">\"Candidate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n              <span class=\"token operator\">*</span><span class=\"token operator\">></span> getVotes\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token constant\">F</span><span class=\"token punctuation\">.</span><span class=\"token function\">pure</span><span class=\"token punctuation\">(</span>Map<span class=\"token punctuation\">.</span>empty<span class=\"token punctuation\">)</span> <span class=\"token comment\">// do nothing </span>\n            <span class=\"token punctuation\">}</span>\n       <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">yield</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>  \n  <span class=\"token punctuation\">}</span>\n  \n  def getVotes<span class=\"token punctuation\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>Map<span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">,</span> VoteRequest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NodeState</span><span class=\"token punctuation\">(</span>\n  tpe<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">,</span>    <span class=\"token comment\">// Follower, Candidate, Leader</span>\n  leader<span class=\"token punctuation\">:</span> Option<span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<hr>\n<h4>Ref</h4>\n<p>var on steroid, used to model mutable state that is accessed concurrently</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">trait Ref<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  def <span class=\"token keyword\">get</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span>\n  def <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token function-variable function\">f</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\"><span class=\"token constant\">A</span></span> <span class=\"token operator\">=></span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Build Stateful with fs2, cats-effect","date":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/stateful-app/","previous":{"fields":{"slug":"/system-design/distributed-system/"},"frontmatter":{"title":"Things to consider when building distributed system"}},"next":null}}}