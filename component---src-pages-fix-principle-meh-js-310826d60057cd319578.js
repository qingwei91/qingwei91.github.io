(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{KsDW:function(e,a,t){"use strict";t.r(a);var n=t("q1tI"),l=t.n(n);var s=function(e){var a,t;function n(){return e.apply(this,arguments)||this}t=e,(a=n).prototype=Object.create(t.prototype),a.prototype.constructor=a,a.__proto__=t;var s=n.prototype;return s.componentDidMount=function(){var e=document.createElement("script");e.src="/impress.min.js",e.async=!0,document.body.appendChild(e)},s.render=function(){return l.a.createElement("div",null,l.a.createElement("link",{href:"/fix-presentation.css",rel:"stylesheet"}),l.a.createElement("div",{id:"impress"},l.a.createElement("div",{className:"step slide","data-x":"0","data-y":"-1500"},l.a.createElement("h1",{id:"title"},"Fix Point from First Principle")),l.a.createElement("div",{className:"step slide","data-x":"1200","data-y":"-1500"},l.a.createElement("h3",null,"Function"),l.a.createElement("img",{src:"https://user-images.githubusercontent.com/6303687/67205886-93513800-f408-11e9-84ca-6a234f66a694.png",alt:""}),l.a.createElement("p",null,"A function maps a value from domain to codomain.")),l.a.createElement("div",{className:"step slide","data-x":"2400","data-y":"-1500"},l.a.createElement("p",null,"A fix point of a ",l.a.createElement("strong",null,"function f")),l.a.createElement("p",null,"is a value ",l.a.createElement("strong",null,"x")," in the function's ",l.a.createElement("strong",null,"domain")),l.a.createElement("p",null,"where the following is true"),l.a.createElement("h3",{className:"center large"},"f(x) = x"),l.a.createElement("p",null,"Insight: Fixed point is only definable with a function")),l.a.createElement("div",{className:"step slide","data-x":"3600","data-y":"-1500"},l.a.createElement("p",null,"Example, the square function, f(x) = x^2"),l.a.createElement("img",{src:"https://user-images.githubusercontent.com/6303687/67205936-a95ef880-f408-11e9-9c70-45623c42b9b6.png",alt:""}),l.a.createElement("p",{className:"center"},"square(0) = 0, square(1) = 1"),l.a.createElement("p",{className:"center"},"Fix point = [0, 1]")),l.a.createElement("div",{className:"step slide","data-x":"4800","data-y":"-1500"},l.a.createElement("h2",null,"Define fix function"),l.a.createElement("pre",null,l.a.createElement("code",null,"fix(f) = x where f(x) = x // Eg. fix(square_fn) = 0 let i = fix(f) i = f(i) fix(f) = f(fix(f)) fix(f) = f(f(fix(f))) fix(f) = f(f(f(fix(f)))) // When does it ends?",l.a.createElement("strong",null,"Insight"),": fix(f) can express arbitrarily nested recursion"))),l.a.createElement("div",{className:"step slide","data-x":"6000","data-y":"-1500"},l.a.createElement("h2",null,"Type Level Function"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"type F[X] = List[X]")),l.a.createElement("p",null,"Insight: Function exists in many different form, even on type level")),l.a.createElement("div",{className:"step slide","data-x":"7200","data-y":"-1500"},l.a.createElement("h3",null,"Fix point of type level function?"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"// fix(f) = f(fix(f)) type Fix[F[_]] = F[Fix[F]]"))),l.a.createElement("div",{className:"step slide","data-x":"7200","data-y":"-1500"},l.a.createElement("h3",null,"Fix point of type level function?"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"// fix(f) = f(fix(f)) type Fix[F[_]] = F[Fix[F]]  // does not compile case class Fix[F[_]](unfix: F[Fix[F]]) // this works"))),l.a.createElement("div",{className:"step slide","data-x":"8400","data-y":"-1500"},l.a.createElement("h3",null,"Example, Peano Number"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"sealed trait Peano[A] case class One[A](a: A) extends Peano[A] case class Zero[A]()  extends Peano[A] // this represents 2 One(One(Zero()))"))),l.a.createElement("div",{className:"step slide","data-x":"8400","data-y":"-1500"},l.a.createElement("h3",null,"Example, Peano Number"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"// this represents 2 One(One(Zero())) case class Fix[F[_]](unfix: F[Fix[F]]) Fix(One( Fix(One( Fix(Zero(): Peano[Fix[Peano]]) )) )) Insight: they are ",l.a.createElement("strong",null,"semantically")," the same"))),l.a.createElement("div",{className:"step slide","data-x":"8400","data-y":"-1500"},l.a.createElement("h3",null,"Example, Peano Number"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"// this represents 2 One(One(Zero())) // type == Peano[Peano[Peano[Nothing]]] case class Fix[F[_]](unfix: F[Fix[F]]) Fix(One( Fix(One( Fix(Zero()) )) )) // type == Fix[Peano]"))),l.a.createElement("div",{className:"step slide","data-x":"9600","data-y":"-1500"},l.a.createElement("h3",null,"General representation allows general algorithms"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"def addAll(peano: Peano[Peano[Peano[Nothing]]]): Int = ??? def addAll(peano: Fix[Peano]): Int = ???"))),l.a.createElement("div",{className:"step slide","data-x":"10800","data-y":"-1500"},l.a.createElement("h3",null,"It was over-complicated"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"sealed trait Peano[A] case class One[A](a: A) extends Peano[A] case class Zero[A]()  extends Peano[A] One(One(Zero())) // type = Peano[Peano[Peano[Nothing]]] sealed trait Peano2 case class One(p: Peano2) extends Peano2 case object Zero extends Peano2 One(One(Zero)) // type = Peano2"))),l.a.createElement("div",{className:"step slide","data-x":"12000","data-y":"-1500"},l.a.createElement("h3",null,"General representation allows general algorithms"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"def addAll(peano: Peano[Peano[Peano[Nothing]]]): Int = ??? def addAll(peano: Fix[Peano]): Int = ??? // Best of both worlds?!",l.a.createElement("strong",null,"def addAll(peano: Peano2): Int = ???")))),l.a.createElement("div",{className:"step slide","data-x":"13200","data-y":"-1500"},l.a.createElement("h3",null,"General representation allows general algorithms"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"Representations, from specific to general * Peano[Peano[Nothing]] * Peano2 or Fix[Peano] * Fix[F] def collapse[F[_], A](fix: Fix[F])(fold: F[A] => A): A")),l.a.createElement("p",null,"Insight: Fix is about representing recursive structure in a ",l.a.createElement("strong",null,"general")," way")),l.a.createElement("div",{className:"step slide","data-x":"14400","data-y":"-1500"},l.a.createElement("h3",null,"Example of really general algorithm: Cata-morphism"),l.a.createElement("pre",null,l.a.createElement("code",null,"Reminder: fix(f) = f(f(f(fix(f)))) if we have ways to 1. f(fix(f)) => f(a) 2. f(a) => a 3. f(fix(f)) => a // inductively from 1 and 2 We could do this f(f(f(fix(f)))) // apply rule 1 f(f(f(a)))      // apply rule 2 f(f(a))         // apply rule 2 f(a)            // apply rule 2 a               // end result"))),l.a.createElement("div",{className:"step slide","data-x":"15600","data-y":"-1500"},l.a.createElement("h3",null,"Concrete example"),l.a.createElement("pre",null,l.a.createElement("code",{className:"scala"},"One(One(Zero())) // Step 1: Zero[Fix[Peano]] => 0 One(One(0))      // Step 2: One(0) => 1 + 0 One(1+0)         // Step 3: One(1) => 1 + 1 1+1+0            // Step 4: 2!!"))),l.a.createElement("div",{className:"step slide","data-x":"16800","data-y":"-1500"},l.a.createElement("h3",null,"Comparison"),l.a.createElement("img",{src:"https://user-images.githubusercontent.com/6303687/67306018-3039d100-f4ee-11e9-8ab4-6c08bba69e00.png",alt:""})),l.a.createElement("div",{className:"step slide","data-x":"18000","data-y":"-1500"},l.a.createElement("h2",null,"Summary"),l.a.createElement("ul",null,l.a.createElement("li",null,"Fix point is a value of a function's domain where f(x)=x"),l.a.createElement("li",null,"Fix point can be defined for type level function"),l.a.createElement("li",null,"When used at type level, Fix Point can represent arbitrary layer of recursive data structure"),l.a.createElement("li",null,"The benefit of using Fix is to be able to leverage library code for recursion"))),l.a.createElement("div",{id:"overview",className:"step","data-x":"3000","data-y":"1500","data-z":"0","data-scale":"10"})),l.a.createElement("script",{src:"js/impress.js"}),l.a.createElement("script",null,"impress().init();"),l.a.createElement("script",null,"hljs.initHighlightingOnLoad();"))},n}(l.a.Component);a.default=s}}]);
//# sourceMappingURL=component---src-pages-fix-principle-meh-js-310826d60057cd319578.js.map